q()
      counter[[sample]] = 0
library(stringr)
library(segmented)
library(ggplot2)
rm(list=ls())
setwd( "C:/Users/Skyvein/Desktop/TMB/code/bladder")#path of tsv file
t = read.table('TCGA-BLCA.muse_snv.tsv',
               head=T,
               check.names=F,
               sep='\t',
               fileEncoding='UTF-8')
# 筛选有害突变并计数
counter = list()
for (i in 1:length(t[,1])) {
  if (
    t[i,10] == 'PASS' && (
      str_detect(t[i,9], 'coding_sequence_variant')
      || str_detect(t[i,9], 'frameshift_variant')
      || str_detect(t[i,9], 'inframe_')
      || str_detect(t[i,9], 'missense_variant')
      || str_detect(t[i,9], 'splice_')
      || str_detect(t[i,9], 'start_')
      || str_detect(t[i,9], 'stop_')
    )
  ) {
    sample = as.character(t[i,1])
    if (is.null(counter[[sample]])) {
      counter[[sample]] = 0
    }
    counter[[sample]] = counter[[sample]] + 1
  }
}
# 计算tmb并排序
samples = names(counter)
tmbs = rep(0, length(counter))
for (i in 1:length(samples)) {
  tmbs[i] = counter[[samples[i]]] / 36
}
tmb.df = data.frame(samples, tmbs)
tmb.df = tmb.df[order(tmb.df[,2], decreasing = T),]  # 对行排序，按第2列降序
tmb.df[,3] = 1:length(samples)
names(tmb.df) = c('sample', 'tmb', 'rank')
row.names(tmb.df) = 1:length(samples)
# 画散点图
g = ggplot(data = tmb.df, aes(x = rank, y = tmb)) +
       geom_point(color = "grey60") +
       labs(x = "Order Number of Samples", y = "TMB")
# segmented回归
my.lm = lm(tmb~rank, data=tmb.df)  # 先线性回归
summary(my.lm)
my.coef = coef(my.lm)  # 提取系数
# g = g + geom_abline(intercept = my.coef[1], slope = my.coef[2], color = "orange")
my.seg <- segmented(my.lm, 
                    seg.Z = ~rank, 
                    psi = list(rank = c(15)))  # psi：估算折点位置
summary(my.seg)
# 画折线
my.fitted = fitted(my.seg)
my.model = data.frame(rank = tmb.df$rank, elevation = my.fitted)
g = g + geom_line(data = my.model, 
                  aes(x = rank, y = elevation),
                  colour = "red")
# 输出折点
x = my.seg$psi[2]  # 横坐标
y = my.fitted[[2]] + (my.fitted[[2]] - my.fitted[[1]]) * (x - 2) # 纵坐标
x
y
# 画分段线
my.lines <- y
g = g + geom_hline(yintercept = my.lines,
                   linetype = "dashed",
                   color = 'grey40')
ggsave(g, file="tmb.eps", width=6, height=4)
g
library(stringr)
library(segmented)
library(ggplot2)
rm(list=ls())
setwd( "C:/Users/Skyvein/Desktop/TMB/code/liver")#path of tsv file
t = read.table('TCGA-LIHC.muse_snv.tsv',
               head=T,
               check.names=F,
               sep='\t',
               fileEncoding='UTF-8')
# 筛选有害突变并计数
counter = list()
for (i in 1:length(t[,1])) {
  if (
    t[i,10] == 'PASS' && (
      str_detect(t[i,9], 'coding_sequence_variant')
      || str_detect(t[i,9], 'frameshift_variant')
      || str_detect(t[i,9], 'inframe_')
      || str_detect(t[i,9], 'missense_variant')
      || str_detect(t[i,9], 'splice_')
      || str_detect(t[i,9], 'start_')
      || str_detect(t[i,9], 'stop_')
    )
  ) {
    sample = as.character(t[i,1])
    if (is.null(counter[[sample]])) {
      counter[[sample]] = 0
    }
    counter[[sample]] = counter[[sample]] + 1
  }
}
# 计算tmb并排序
samples = names(counter)
tmbs = rep(0, length(counter))
for (i in 1:length(samples)) {
  tmbs[i] = counter[[samples[i]]] / 36
}
tmb.df = data.frame(samples, tmbs)
tmb.df = tmb.df[order(tmb.df[,2], decreasing = T),]  # 对行排序，按第2列降序
tmb.df[,3] = 1:length(samples)
names(tmb.df) = c('sample', 'tmb', 'rank')
row.names(tmb.df) = 1:length(samples)
# 画散点图
g = ggplot(data = tmb.df, aes(x = rank, y = tmb)) +
       geom_point(color = "grey60") +
       labs(x = "Order Number of Samples", y = "TMB")
# segmented回归
my.lm = lm(tmb~rank, data=tmb.df)  # 先线性回归
summary(my.lm)
my.coef = coef(my.lm)  # 提取系数
# g = g + geom_abline(intercept = my.coef[1], slope = my.coef[2], color = "orange")
my.seg <- segmented(my.lm, 
                    seg.Z = ~rank, 
                    psi = list(rank = c(15)))  # psi：估算折点位置
summary(my.seg)
# 画折线
my.fitted = fitted(my.seg)
my.model = data.frame(rank = tmb.df$rank, elevation = my.fitted)
g = g + geom_line(data = my.model, 
                  aes(x = rank, y = elevation),
                  colour = "red")
# 输出折点
x = my.seg$psi[2]  # 横坐标
y = my.fitted[[2]] + (my.fitted[[2]] - my.fitted[[1]]) * (x - 2) # 纵坐标
x
y
# 画分段线
my.lines <- y
g = g + geom_hline(yintercept = my.lines,
                   linetype = "dashed",
                   color = 'grey40')
ggsave(g, file="tmb.eps", width=6, height=4)
g
# dev.off()
q()
